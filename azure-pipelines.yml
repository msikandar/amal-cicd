# Node.js React Web App to Linux on Azure
# Build a Node.js React app and deploy it to Azure as a Linux web app.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
  branches:
    include:
      - main

pr:
  branches:
    exclude:
      - '*'

variables:

  npm_config_cache: $(Pipeline.Workspace)/.npm

  # Azure Resource Manager connection created during pipeline creation
  azureSubscription: 'afce9c1e-e0dd-4ab5-9e17-6f1f2b80b074'

  # Web app name
  webAppName: 'amalcicd'

  # Environment name
  environmentName: 'amalcicd'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'
  
  NEXTAUTH_URL: 'https://amalcicd.azurewebsites.net/'
  NEXTAUTH_SECRET: 'YOUR_SECRET'

  GITHUB_ID: 'Ov23liHdLhsBCUcHNDz9'
  GITHUB_SECRET: 'bd9fcbfccfe579a32171c839ff8632b614e6e73b'

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)

    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '18.x'
      displayName: 'Install Node.js'

    - task: Cache@2
      inputs:
        key: 'npm | "$(Agent.OS)" | package-lock.json'
        restoreKeys: |
          npm | "$(Agent.OS)"
        path: $(npm_config_cache)
      displayName: 'Cache npm'
      
    - script: npm ci
      displayName: 'Install and remove cached node_modules'

    - task: Cache@2
      inputs:
        key: next | "$(Agent.OS)" | package-lock.json
        path: '$(System.DefaultWorkingDirectory)/.next/cache'
      displayName: 'Cache .next/cache'

    - task: CmdLine@2
      displayName: 'Build'
      env: 
        NEXTAUTH_URL: $(NEXTAUTH_URL)
        NEXTAUTH_SECRET: $(NEXTAUTH_SECRET)
        GITHUB_ID: $(GITHUB_ID)
        GITHUB_SECRET: $(GITHUB_SECRET)
      inputs:
        script: npm run build
    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        replaceExistingArchive: true

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
        ArtifactName: 'drop'

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: Deploy
    displayName: Deploy
    environment: $(environmentName)
    pool:
      vmImage: $(vmImageName)
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureRmWebAppDeployment@4
            displayName: 'Azure App Service Deploy: amalcicd'
            inputs:
              azureSubscription: $(azureSubscription)
              appType: webAppLinux
              WebAppName: $(webAppName)
              packageForLinux: '$(Pipeline.Workspace)/drop/$(Build.BuildId).zip'
              RuntimeStack: 'NODE|18-lts'