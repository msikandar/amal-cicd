trigger:
  branches:
    include:
      - main

variables:
  azureSubscription: 'd87143b4-d8d5-4d89-92b4-8542e0c0cd06'
  webAppName: 'amalcicd'
  environmentName: 'amalcicd'
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: 'Build stage'
  jobs:
  - job: Build
    displayName: 'Build'
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '20.x'
      displayName: 'Install Node.js'

    - script: |
        npm install -g npm@latest
      displayName: 'Install latest npm'

    - script: |
        npm install
      displayName: 'Install dependencies'

    - script: |
        npm run build
      displayName: 'Build the project'

    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        replaceExistingArchive: true

    - publish: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
      artifact: drop

- stage: Deploy
  displayName: 'Deploy stage'
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: Deploy
    displayName: 'Deploy'
    environment: $(environmentName)
    pool:
      vmImage: $(vmImageName)
    strategy:
      runOnce:
        deploy:
          steps:
          - task: DownloadPipelineArtifact@2
            inputs:
              artifact: 'drop'
              path: '$(Pipeline.Workspace)/drop'

          - script: |
              npm install
              npm run build --if-present
            displayName: 'Install dependencies and build'

          - task: AzureRmWebAppDeployment@4
            displayName: 'Azure App Service Deploy: $(webAppName)'
            inputs:
              azureSubscription: $(azureSubscription)
              appType: webAppLinux
              WebAppName: $(webAppName)
              packageForLinux: '$(Pipeline.Workspace)/drop/$(Build.BuildId).zip'
              RuntimeStack: 'NODE|20.14'
              StartupCommand: 'npm run start'